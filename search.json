[{"path":"https://filipwastberg.github.io/swemaps2/articles/combine-with-kolada.html","id":"kolada","dir":"Articles","previous_headings":"","what":"Kolada","title":"Combine swemaps2 with data from Kolada","text":"Kolada data cooperation Swedish municipalities regions. website can find rich variety different statistics. Many come Statistics Sweden (SCB) come regions . query data can use excellent package rKolada. municipality map Skåne want fill data Kolada.  rKolada great package easy use. pull data Kolada many housing projects granted building approval. can join data municipality_id filter one particular year: Next, visualize data using geom_sf(), also use geom_label_repel package ggrepel add labels municipalities.","code":"library(tidyverse) library(swemaps2)  municipality %>%    filter(ln_namn == \"Skåne\") %>%    ggplot() +   geom_sf() +   theme_swemap2() library(rKolada)  kpis <- get_kpi()  kpi_bygglov <- kpi_search(kpis, c(\"bostäder som beviljats bygglov\"), column = \"description\")  kpi_bygglov_id <- kpi_extract_ids(kpi_bygglov)  municipalities <- get_municipality() %>%    municipality_extract_ids()  bygg_data <- get_values(   kpi = kpi_bygglov_id,   municipality =  municipalities ) skane_bygglov <- left_join(   municipality, bygg_data, by = c(\"kn_kod\" = \"municipality_id\")   ) %>%    filter(year == 2019 & ln_namn == \"Skåne\") library(ggrepel) ggplot(skane_bygglov, aes(fill = value)) +   geom_sf() +   theme_swemap2() +   scale_fill_viridis_c(option = \"magma\")+   labs(     title = \"Antal bostäder som beviljat bygglov\",     subtitle = \"Antal bostäder som beviljats bygglov under två senast åren (T och T-1),\\navser endast permanentboende, antal/1000 inv.\",     caption = \"Source: SKR and SCB, through Kolada\",     fill = \"Antal\\nbygglov\"   ) +   geom_label_repel(     data = head(skane_bygglov),     aes(label = kn_namn, geometry = geometry),     stat = \"sf_coordinates\",     min.segment.length = 0,     color = \"darkgrey\"   )"},{"path":"https://filipwastberg.github.io/swemaps2/articles/combine-with-scb.html","id":"county-municipality","dir":"Articles","previous_headings":"","what":"County & Municipality","title":"Combine swemaps2 with data from SCB","text":"Statistics Sweden (SCB) lot interesting statistics can analyzed geographical level. Database Statistikdatabasen can download data Excel tables. Even better, can use R Open Gov package pxweb query data SCB. running pxweb_interactive() can interactively choose data query. case ’re going use data Statistics Sweden.  clicked data want query can get call database R code. code manipulated code returned pxweb query county codes swemaps2::county. data queried population count higher education. Unfortunately, get region codes SCB. remove \" län region names can join name: order make map meaningful want analyze proportion county higher education. can easily query total population data SCB: join population data can can now easily visualize data Swedish map  can also create interactive map simplevis","code":"library(pxweb)  pxweb_interactive() library(pxweb) library(janitor) library(swemaps2) library(tidyverse)  pxweb_query_list <- list(   \"Region\"= county$ln_kod, ## Only query county codes in swemaps2::county   \"UtbildningsNiva\"=c(\"6\"),   \"Alder\"=c(\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95+\"),   \"Kon\"=c(\"1\",\"2\"),   \"ContentsCode\"=c(\"000000I2\"),   \"Tid\"=c(\"2020\"))  # Download data  px_utb <- pxweb_get(url = \"http://api.scb.se/OV0104/v1/doris/sv/ssd/UF/UF0506/UtbBefRegionR\",                     query = pxweb_query_list)  # Convert to data.frame and aggregate utb <- as.data.frame(px_utb,                       column.name.type = \"text\",                      variable.value.type = \"text\") %>%    janitor::clean_names() %>%    group_by(region) %>%    summarise(higher_education = sum(befolkning_16_95_ar))  utb #> # A tibble: 21 × 2 #>    region          higher_education #>    <chr>                      <dbl> #>  1 Blekinge län               22886 #>  2 Dalarnas län               36441 #>  3 Gotlands län                9045 #>  4 Gävleborgs län             35449 #>  5 Hallands län               51583 #>  6 Jämtlands län              19169 #>  7 Jönköpings län             48436 #>  8 Kalmar län                 32271 #>  9 Kronobergs län             28758 #> 10 Norrbottens län            35211 #> # … with 11 more rows utb <- utb %>%    mutate(region = str_replace(region, \" län\", \"\"))   county <- left_join(county, utb, by = c(\"ln_namn\" = \"region\"))  county #> Simple feature collection with 21 features and 3 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 277247.6 ymin: 6133891 xmax: 917271.4 ymax: 7669870 #> Projected CRS: SWEREF99 TM #> # A tibble: 21 × 4 #>    ln_kod ln_namn                                      geometry higher_education #>    <chr>  <chr>                              <MULTIPOLYGON [m]>            <dbl> #>  1 01     Stockholms    (((627791.9 6569168, 630226.6 6572122,…           549126 #>  2 03     Uppsala       (((633496.1 6610607, 632895.2 6609547,…            75554 #>  3 04     Södermanlands (((555102.6 6536546, 549484.9 6540210,…            37857 #>  4 05     Östergötlands (((496094.6 6443310, 493792.5 6438720,…            76071 #>  5 06     Jönköpings    (((498999.7 6421417, 500271.5 6417129,…            48436 #>  6 07     Kronobergs    (((504095.5 6338410, 505156.2 6340178,…            28758 #>  7 08     Kalmar        (((544656.8 6325506, 540241.9 6327303,…            32271 #>  8 09     Gotlands      (((706606.9 6415775, 709951.4 6417040,…             9045 #>  9 10     Blekinge      (((473443 6228381, 472071.2 6231138, 4…            22886 #> 10 12     Skåne         (((420135.8 6254456, 425339.2 6256685,…           247020 #> # … with 11 more rows pxweb_query_list <-  list(   \"Region\"= county$ln_kod,   \"Alder\"=c(\"tot\"),   \"Kon\"=c(\"1\",\"2\"),   \"ContentsCode\"=c(\"BE0101A9\"),   \"Tid\"=c(\"2020\"))  # Download data  px_population <- pxweb_get(url = \"http://api.scb.se/OV0104/v1/doris/sv/ssd/BE/BE0101/BE0101A/FolkmangdNov\",                            query = pxweb_query_list)  # Convert to data.frame  population <- as.data.frame(px_population, column.name.type = \"text\", variable.value.type = \"text\")  population <- population %>%   clean_names() %>%    mutate(region = str_replace(region, \" län\", \"\")) %>%    group_by(region) %>%    summarise(population = sum(folkmangden_den_1_november)) county <- county %>%    left_join(population, by = c(\"ln_namn\" = \"region\")) %>%    mutate(p_higher_education = round(higher_education / population, 2))  county #> Simple feature collection with 21 features and 5 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 277247.6 ymin: 6133891 xmax: 917271.4 ymax: 7669870 #> Projected CRS: SWEREF99 TM #> # A tibble: 21 × 6 #>    ln_kod ln_namn                           geometry higher_education population #>  * <chr>  <chr>                   <MULTIPOLYGON [m]>            <dbl>      <dbl> #>  1 01     Stockholms    (((627791.9 6569168, 630226…           549126    2391841 #>  2 03     Uppsala       (((633496.1 6610607, 632895…            75554     388076 #>  3 04     Södermanlands (((555102.6 6536546, 549484…            37857     299329 #>  4 05     Östergötlands (((496094.6 6443310, 493792…            76071     467276 #>  5 06     Jönköpings    (((498999.7 6421417, 500271…            48436     364953 #>  6 07     Kronobergs    (((504095.5 6338410, 505156…            28758     202247 #>  7 08     Kalmar        (((544656.8 6325506, 540241…            32271     246033 #>  8 09     Gotlands      (((706606.9 6415775, 709951…             9045      60050 #>  9 10     Blekinge      (((473443 6228381, 472071.2…            22886     159227 #> 10 12     Skåne         (((420135.8 6254456, 425339…           247020    1388910 #> # … with 11 more rows, and 1 more variable: p_higher_education <dbl> library(scales) ggplot(county, aes(fill = p_higher_education)) +   geom_sf() +   theme_swemap2() +   scale_fill_viridis_c(option = \"magma\", labels = percent) +   labs(     title = \"Percent population with Higher Education\",     fill = \"% Higher\\nEducation\",     caption = \"Source: SCB\"   ) library(simplevis)  leaflet_sf_col(county, col_var = \"p_higher_education\")"},{"path":"https://filipwastberg.github.io/swemaps2/articles/combine-with-scb.html","id":"deso-regso","dir":"Articles","previous_headings":"","what":"DeSO & RegSO","title":"Combine swemaps2 with data from SCB","text":"Using pxweb can query lots statistics SCB DeSO level. example, might interested proportion children low economic standard Stockholm. Using pxweb_interactive() get good skeleton code. changed code query regions deso_sthlm. Finally, can use data create map:","code":"deso <- load_deso() #> Reading layer `DeSO_2018_v2' from data source  #>   `/private/var/folders/pn/9hhpnpd15_d2k3qp5k814nnh0000gq/T/RtmpHrqq94/deso_2018_2021-10-21/DeSO_2018_v2.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 5984 features and 7 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 266646.3 ymin: 6132476 xmax: 920877.4 ymax: 7671055 #> Projected CRS: SWEREF99 TM  deso_sthlm <- deso %>%    filter(kommunnamn == \"Stockholm\")  pxweb_query_list <-    list(\"Region\"= deso_sthlm$deso,        \"Alder\"=c(\"0-19\"),        \"ContentsCode\"=c(\"000001SM\"),        \"Tid\"=c(\"2019\"))  # Download data  px_data <-    pxweb_get(url = \"http://api.scb.se/OV0104/v1/doris/sv/ssd/HE/HE0110/HE0110I/Tab4InkDesoN1\",             query = pxweb_query_list)  # Convert to data.frame  px_sthlm <- as.data.frame(px_data, column.name.type = \"text\", variable.value.type = \"text\") %>%    clean_names() %>%    as_tibble()  deso_sthlm <- deso_sthlm %>%    left_join(px_sthlm, by = c(\"deso\" = \"region\")) ggplot(deso_sthlm , aes(fill = lag_ekonomisk_standard_procent)) +   geom_sf() +   scale_fill_viridis_c(option = \"magma\") +    theme_swemap2() +   labs(     title = \"% Barn med Låg ekonomisk standard\",     subtitle = \"Andel personer 0-19 år med låg ekonomisk standard per Demografiskt statistikområde\\ni Stockholm stad\",     fill = \"% Låg\\nekonomisk\\nstandard\"   )"},{"path":"https://filipwastberg.github.io/swemaps2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Filip Wastberg. Author, maintainer.","code":""},{"path":"https://filipwastberg.github.io/swemaps2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wastberg F (2022). swemaps2: Swedish map data ggplot leaflet R. https://github.com/filipwastberg/swemaps2, https://filipwastberg.github.io/swemaps2/.","code":"@Manual{,   title = {swemaps2: Swedish map data for ggplot and leaflet in R},   author = {Filip Wastberg},   year = {2022},   note = {https://github.com/filipwastberg/swemaps2, https://filipwastberg.github.io/swemaps2/}, }"},{"path":"https://filipwastberg.github.io/swemaps2/index.html","id":"swemaps2","dir":"","previous_headings":"","what":"Swedish map data for ggplot and leaflet in R","title":"Swedish map data for ggplot and leaflet in R","text":"swemaps2 package provide map objects easily make beautiful maps Sweden R.  successor swemaps reinholdsson","code":""},{"path":"https://filipwastberg.github.io/swemaps2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Swedish map data for ggplot and leaflet in R","text":"can install package github:","code":"remotes::install_github(\"filipwastberg/swemaps2\")"},{"path":"https://filipwastberg.github.io/swemaps2/index.html","id":"country-maps","dir":"","previous_headings":"","what":"Country maps","title":"Swedish map data for ggplot and leaflet in R","text":"swemaps2 contain simple features (sf) objects make easy create maps Sweden. can use basic sf-objects combine data SCB (using pxweb package) Kolada (using rKolada package). Using objects easy use ggplot create beautiful maps counties (Län) municipality (Kommun):  Municipality (kommun):  Using package like leaflet simplevis can create interactive maps:  regional FA Region maps also included:","code":"county #> Simple feature collection with 21 features and 2 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 277247.6 ymin: 6133891 xmax: 917271.4 ymax: 7669870 #> Projected CRS: SWEREF99 TM #> # A tibble: 21 × 3 #>    ln_kod ln_namn                                                       geometry #>    <chr>  <chr>                                               <MULTIPOLYGON [m]> #>  1 01     Stockholms    (((627791.9 6569168, 630226.6 6572122, 631290.7 6570364… #>  2 03     Uppsala       (((633496.1 6610607, 632895.2 6609547, 637045.2 6601261… #>  3 04     Södermanlands (((555102.6 6536546, 549484.9 6540210, 548399.8 6543139… #>  4 05     Östergötlands (((496094.6 6443310, 493792.5 6438720, 485582.7 6436950… #>  5 06     Jönköpings    (((498999.7 6421417, 500271.5 6417129, 504533.5 6412062… #>  6 07     Kronobergs    (((504095.5 6338410, 505156.2 6340178, 509340.4 6339948… #>  7 08     Kalmar        (((544656.8 6325506, 540241.9 6327303, 537963 6332166, … #>  8 09     Gotlands      (((706606.9 6415775, 709951.4 6417040, 712659 6417968, … #>  9 10     Blekinge      (((473443 6228381, 472071.2 6231138, 468594.2 6230492, … #> 10 12     Skåne         (((420135.8 6254456, 425339.2 6256685, 430337.3 6256572… #> # … with 11 more rows library(swemaps2) library(tidyverse) library(ggthemes)  county %>%    mutate(random_number = rnorm(nrow(.), mean = 100, sd = 10) ) %>%  ggplot(aes(fill = random_number)) +   geom_sf() +   scale_fill_viridis_c() +   theme_swemap2() municipality %>%    mutate(random_number = rnorm(nrow(.), mean = 100, sd = 10) ) %>%  ggplot(aes(fill = random_number)) +   geom_sf() +   scale_fill_viridis_c() +   theme_swemap2() library(simplevis)  municipality %>%    mutate(random_number = rnorm(nrow(.), mean = 100, sd = 10)) %>%    leaflet_sf_col(col_var = random_number) fa_region %>%    mutate(random_number = rnorm(nrow(.), mean = 100, sd = 10) ) %>%  ggplot(aes(fill = random_number)) +   geom_sf() +   scale_fill_viridis_c() +   theme_swemap()"},{"path":"https://filipwastberg.github.io/swemaps2/index.html","id":"deso-and-regso","dir":"","previous_headings":"","what":"DeSO and RegSO","title":"Swedish map data for ggplot and leaflet in R","text":"Statistics Sweden two demographic maps can load using load_deso() load_regso() functions. objects big works best first filter .","code":"deso <- load_deso() #> Reading layer `DeSO_2018_v2' from data source  #>   `/private/var/folders/pn/9hhpnpd15_d2k3qp5k814nnh0000gq/T/RtmpDaqRdo/deso_2018_2021-10-21/DeSO_2018_v2.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 5984 features and 7 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 266646.3 ymin: 6132476 xmax: 920877.4 ymax: 7671055 #> Projected CRS: SWEREF99 TM  deso %>%    filter(kommunnamn == \"Kalmar\") %>%    mutate(random_number = rnorm(nrow(.), mean = 100, sd = 10)) %>%    ggplot(aes(fill = random_number)) +   geom_sf() +   labs(     title = \"Map over Kalmar\"   ) +   theme_swemap2() deso %>%    filter(kommunnamn == \"Kalmar\") %>%    mutate(random_number = round(rnorm(nrow(.), mean = 100, sd = 10), 0)) %>%    leaflet_sf_col(col_var = random_number)"},{"path":[]},{"path":"https://filipwastberg.github.io/swemaps2/index.html","id":"stockholm","dir":"","previous_headings":"City maps","what":"Stockholm","title":"Swedish map data for ggplot and leaflet in R","text":"addition maps three largest Swedish cities Stockholm, Göteborg Malmö. Stockholm map, example, also additional population data:","code":"ggplot(sthlm, aes(fill = kvinnor_45)) +   geom_sf() +   scale_fill_viridis_c() +   labs(     title = \"Stockholm women 45\",     caption = \"Source: https://dataportalen.stockholm.se\"   ) +   theme_swemap2()"},{"path":"https://filipwastberg.github.io/swemaps2/index.html","id":"göteborg","dir":"","previous_headings":"","what":"Göteborg","title":"Swedish map data for ggplot and leaflet in R","text":"Gothenburg largest map:","code":"ggplot(gbg, aes(fill = area_km2)) +   geom_sf() +   scale_fill_viridis_c() +   theme_swemap2() +   labs(     title = \"Gothenburg by area size\",     caption = \"Source: http://statistikdatabas.goteborg.se/pxweb/sv/\"   )"},{"path":"https://filipwastberg.github.io/swemaps2/index.html","id":"malmö","dir":"","previous_headings":"","what":"Malmö","title":"Swedish map data for ggplot and leaflet in R","text":"","code":"ggplot(malmo, aes(fill = area)) +   geom_sf() +   scale_fill_viridis_c() +   theme_swemap2() +   labs(     title = \"Malmö by area size\",     caption = \"Source: https://malmo.dataplatform.se/\"   )"},{"path":"https://filipwastberg.github.io/swemaps2/reference/county.html","id":null,"dir":"Reference","previous_headings":"","what":"SF object with county borders in Sweden — county","title":"SF object with county borders in Sweden — county","text":"Includes polygon regional IDs counties Sweden","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/county.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SF object with county borders in Sweden — county","text":"","code":"county"},{"path":"https://filipwastberg.github.io/swemaps2/reference/county.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SF object with county borders in Sweden — county","text":"SF object 3 columns ln_kod character county ID ln_namn character county name geometry multipolygon county borders","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/county.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SF object with county borders in Sweden — county","text":"SCB, https://www.scb.se/hitta-statistik/regional-statistik-och-kartor/regionala-indelningar/digitala-granser/","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/fa_region.html","id":null,"dir":"Reference","previous_headings":"","what":"SF object with FA region borders in Sweden — fa_region","title":"SF object with FA region borders in Sweden — fa_region","text":"Includes polygon regional IDs FA regions Sweden","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/fa_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SF object with FA region borders in Sweden — fa_region","text":"","code":"fa_region"},{"path":"https://filipwastberg.github.io/swemaps2/reference/fa_region.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SF object with FA region borders in Sweden — fa_region","text":"SF object 3 columns fa_kod character FA region ID fa_namn character FA region name geometry multipolygon FA region borders","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/fa_region.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SF object with FA region borders in Sweden — fa_region","text":"SCB, https://www.scb.se/hitta-statistik/regional-statistik-och-kartor/regionala-indelningar/digitala-granser/","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/gbg.html","id":null,"dir":"Reference","previous_headings":"","what":"SF object with borders in Gothenburg — gbg","title":"SF object with borders in Gothenburg — gbg","text":"Includes polygon metadata Gothenburg","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/gbg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SF object with borders in Gothenburg — gbg","text":"","code":"gbg"},{"path":"https://filipwastberg.github.io/swemaps2/reference/gbg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SF object with borders in Gothenburg — gbg","text":"SF object 4 columns ajour_datu date describing last update basomrade character describing area code area_km2 number describing area size km2 geometry multipolygon region borders","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/gbg.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SF object with borders in Gothenburg — gbg","text":"Goteborg stad, http://statistikdatabas.goteborg.se/pxweb/sv/","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/malmo.html","id":null,"dir":"Reference","previous_headings":"","what":"SF object with borders in Malmo — malmo","title":"SF object with borders in Malmo — malmo","text":"Includes polygon metadata Malmo","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/malmo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SF object with borders in Malmo — malmo","text":"","code":"malmo"},{"path":"https://filipwastberg.github.io/swemaps2/reference/malmo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SF object with borders in Malmo — malmo","text":"SF object 4 columns delomrade character region name do_kod number id code? area number describing area size geometry multipolygon region borders","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/malmo.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SF object with borders in Malmo — malmo","text":"Malmo stad, https://malmo.dataplatform.se/","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/municipality.html","id":null,"dir":"Reference","previous_headings":"","what":"SF object with municipality borders in Sweden — municipality","title":"SF object with municipality borders in Sweden — municipality","text":"Includes polygon regional IDs municipalities Sweden","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/municipality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SF object with municipality borders in Sweden — municipality","text":"","code":"municipality"},{"path":"https://filipwastberg.github.io/swemaps2/reference/municipality.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SF object with municipality borders in Sweden — municipality","text":"SF object 3 columns kn_kod character municipality ID kn_namn character municipality name ln_kod character region ID ln_namn character region name geometry multipolygon municipality borders","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/municipality.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SF object with municipality borders in Sweden — municipality","text":"SCB, https://www.scb.se/hitta-statistik/regional-statistik-och-kartor/regionala-indelningar/digitala-granser/","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Load DeSO polgyons — %>%","title":"Load DeSO polgyons — %>%","text":"Function read Swedish Demografiska statistikomraden (DeSO) Function read Swedish regionala statistikomrden (RegSO)","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load DeSO polgyons — %>%","text":"","code":"load_deso()  load_regso()"},{"path":"https://filipwastberg.github.io/swemaps2/reference/sthlm.html","id":null,"dir":"Reference","previous_headings":"","what":"SF object with borders in Stockholm — sthlm","title":"SF object with borders in Stockholm — sthlm","text":"Includes polygon metadata Stockholm","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/sthlm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SF object with borders in Stockholm — sthlm","text":"","code":"sthlm"},{"path":"https://filipwastberg.github.io/swemaps2/reference/sthlm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SF object with borders in Stockholm — sthlm","text":"SF object 62 columns namn character region name nyckelkod number key geometry multipolygon region borders","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/sthlm.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SF object with borders in Stockholm — sthlm","text":"Stockholm stad, https://dataportalen.stockholm.se","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/sthlm_points.html","id":null,"dir":"Reference","previous_headings":"","what":"SF object with region points in Stockholm — sthlm_points","title":"SF object with region points in Stockholm — sthlm_points","text":"Includes st points metadata Stockholm","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/sthlm_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SF object with region points in Stockholm — sthlm_points","text":"","code":"sthlm_points"},{"path":"https://filipwastberg.github.io/swemaps2/reference/sthlm_points.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SF object with region points in Stockholm — sthlm_points","text":"SF object 66 columns namn character region name nyckelkod number key geometry multipolygon region borders","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/sthlm_points.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SF object with region points in Stockholm — sthlm_points","text":"Stockholm stad, https://dataportalen.stockholm.se","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/theme_swemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean theme for maps — theme_swemap","title":"Clean theme for maps — theme_swemap","text":"clean theme good displaying maps swemaps2","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/theme_swemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean theme for maps — theme_swemap","text":"","code":"theme_swemap(base_size = 9, base_family = \"\")"},{"path":"https://filipwastberg.github.io/swemaps2/reference/theme_swemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean theme for maps — theme_swemap","text":"base_size base font size, given pts. base_family base font family","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/theme_swemap2.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean theme with gridlines for maps — theme_swemap2","title":"Clean theme with gridlines for maps — theme_swemap2","text":"clean theme maps ggplot2, still gridlines","code":""},{"path":"https://filipwastberg.github.io/swemaps2/reference/theme_swemap2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean theme with gridlines for maps — theme_swemap2","text":"","code":"theme_swemap2(base_size = 9, base_family = \"\")"},{"path":"https://filipwastberg.github.io/swemaps2/reference/theme_swemap2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean theme with gridlines for maps — theme_swemap2","text":"base_size base font size, given pts. base_family base font family","code":""}]
